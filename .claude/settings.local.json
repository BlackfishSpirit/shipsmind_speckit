{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(python:*)",
      "Read(//e/ClaudeCode/**)",
      "Bash(rm:*)",
      "Bash(mcp list:*)",
      "mcp__archon__perform_rag_query",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(git commit:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm dev:*)",
      "Bash(curl:*)",
      "Bash(mdp list:*)",
      "Bash(cat:*)",
      "Bash(pnpm db:push:*)",
      "Bash(ssh:*)",
      "Bash(tar:*)",
      "Bash(scp:*)",
      "WebFetch(domain:shipsmind.com)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(pnpm list:*)",
      "Bash(pnpm add:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright show-report:*)",
      "Bash(findstr:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(netstat -an:*)",
      "Bash(dir tests\\screenshots:*)",
      "Bash(dir .\\tests\\screenshots:*)",
      "WebFetch(domain:linear.app)",
      "mcp__linear__create_issue",
      "mcp__linear__search_issues",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      "Bash(claude mcp:*)",
      "Bash(claude config add-mcp-server linear npx @linear/mcp-server)",
      "Bash(claude config --help)",
      "Bash(claude config ls)",
      "Bash(claude config set mcpServers '{}')",
      "Bash(claude config set --global mcpServers '{}')",
      "Bash(where semgrep)",
      "Bash(pip install:*)",
      "Bash(npx @linear/mcp-server:*)",
      "Bash(npm search:*)",
      "Bash(where:*)",
      "Bash(powershell:*)",
      "Read(//c/Users/matgi/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0/LocalCache/local-packages/Python313/Scripts/**)",
      "Bash(npx linear-mcp:*)",
      "Bash(git pull:*)",
      "mcp__linear__list_teams",
      "mcp__linear__list_projects",
      "Bash(claude config add-mcp-server linear npx @sylphx/linear-mcp)",
      "Read(//c/Users/matgi/AppData/Roaming/**)",
      "Bash(claude config set mcpServers.linear.command npx)",
      "Bash(npx @sylphx/linear-mcp:*)",
      "Bash(timeout:*)",
      "Bash(claude config ls -g)",
      "Bash(claude config get mcpServers)",
      "Bash(dir:*)",
      "mcp__linear__get_issue",
      "Read(//c/vscodedev/Github Repos/Wraek/email_site/**)",
      "Bash(pnpm type-check:*)",
      "mcp__playwright__browser_navigate",
      "mcp__linear__update_issue",
      "mcp__linear__list_issues",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_snapshot",
      "mcp__semgrep__security_check",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_console_messages",
      "mcp__supabase__list_tables",
      "mcp__playwright__browser_evaluate",
      "Read(//c/vscodedev/Github Repos/Wraek/**)",
      "Read(//c/vscodedev/**)",
      "Bash(git merge:*)",
      "Bash(npx n8n-mcp:*)",
      "Bash(claude config add-mcp-server n8n npx n8n-mcp)",
      "mcp__context7__get-library-docs",
      "Bash(start http://localhost:3000)",
      "Bash(start http://localhost:3001/auth/leads)",
      "Bash(tasklist)",
      "Bash(start http://localhost:3001)",
      "Bash(start http://localhost:3002)",
      "Bash(start http://localhost:3002/auth/serp-settings)",
      "Bash(claude config add-mcp-server chrome-devtools npx -y chrome-devtools-mcp@latest)",
      "mcp__chrome-devtools__*"
    ],
    "deny": [],
    "ask": []
  }
}
